package GUI;

import Database.BookingsDB;
import Database.DBManager;
import Database.UsersDB;
import User.*;
import card.cardManager;
import java.sql.SQLException;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author Dipendra
 */

public class UserWindow extends javax.swing.JFrame {

    private final DBManager dbManager;
    private final UsersDB usersDB;
    private final BookingsDB bookingsDB;

    /**
     * Creates new form UserWindow
     */
    public UserWindow() {
        this.dbManager = new DBManager();
        this.usersDB = new UsersDB(dbManager);
        this.bookingsDB = new BookingsDB(dbManager);

        initComponents();
        updateTable();
        User u = Session.getCurrentUser();
        boolean hasCard = u.getCardNumber() != null && !u.getCardNumber().isEmpty();

        if (hasCard) {
            cardNM.setText(u.getCardNumber());
            card_bal.setText(Double.toString(u.getBalance()));
        } else {
            cardNM.setText("Generate card first");
            card_bal.setText(Double.toString(u.getBalance()));
        }

        refreshCardUI();
    }

    // shows a booking confirmation message
    private void showBookingConfirmation(User current,
            LocalDate dateBooked,
            LocalDate departureDate,
            String destination,
            String serviceType,
            double price) {
        String receipt
                = "Booking Confirmation\n"
                + "---------------------\n"
                + "Name          : " + current.getName() + "\n"
                + "Email         : " + current.getEmail() + "\n"
                + "Date Booked   : " + dateBooked + "\n"
                + "Departure Date: " + departureDate + "\n"
                + "Destination   : " + destination + "\n"
                + "Service Type  : " + serviceType + "\n"
                + "Price         : $" + String.format("%.2f", price) + "\n"
                + "---------------------\n"
                + "Thank you for booking with AT HOP!\n"
                + "---------------------\n"
                + "Check the Bookings tab to view your booking.\n"
                + "Safe travels :)";

        fare_booking_info.setText(receipt);
    }

    // updates the bookings table
    private void updateTable() {
        try {
            User current = Session.getCurrentUser();
            if (current == null) return; // Should not happen if window is open

            DefaultTableModel model = (DefaultTableModel) booking_table.getModel();
            List<Booking> bookingInfo = this.bookingsDB.getBookingsForUser(current.getEmail());
            
            model.setRowCount(0); // Clear table

            for (Booking books : bookingInfo) {
                model.addRow(new Object[]{
                    books.getBookingId(),
                    books.getName(),
                    books.getDateBooked(),
                    books.getDepartureDate(),
                    books.getServiceType(),});
            }

        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
    }

    // refreshes the card ui elements
    private void refreshCardUI() {
        User currentUser = Session.getCurrentUser();
        String cardNo = currentUser != null ? currentUser.getCardNumber() : null;
        boolean hasCard = cardNo != null && !cardNo.isEmpty();

        if (hasCard) {
            cardNM.setText(cardNo);
            cardNM.setVisible(true);
            generate_card.setVisible(false);
            no_card_txt.setVisible(false);
        } else {
            // User doesn't have a card - show button and no-card message, hide card number
            generate_card.setVisible(true);
            no_card_txt.setVisible(true);
            cardNM.setVisible(false); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username_label2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        LOGOUT1 = new javax.swing.JButton();
        whoami = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        user_info_tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        name_placeholder = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        email_placeholder = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        role_placeholder = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        acc_made = new javax.swing.JLabel();
        discount_type = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        card_number = new javax.swing.JLabel();
        card_balance = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Options = new javax.swing.JLabel();
        passwordChange = new javax.swing.JButton();
        emailChange = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        ferry_type = new javax.swing.JComboBox<>();
        calender = new com.github.lgooddatepicker.components.CalendarPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fare_price = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        fare_booking_info = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jLabel8 = new javax.swing.JLabel();
        pay_button = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        location = new javax.swing.JComboBox<>();
        aucklandLocations = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        booking_table = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        update_booking = new javax.swing.JToggleButton();
        delete_table = new javax.swing.JButton();
        edit_booking1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        cardNM = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        card_bal = new javax.swing.JLabel();
        generate_card = new javax.swing.JToggleButton();
        no_card_txt = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        amount_topup = new javax.swing.JTextField();
        topup_button = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        LOGOUT = new javax.swing.JButton();

        username_label2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Auckland_Transport_Logo_optimized.png"))); // NOI18N

        jButton4.setText("Change Email");

        LOGOUT1.setText("LOGOUT");
        LOGOUT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUT1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        whoami.setText("My AT HOP");
        whoami.setFont(new java.awt.Font("Segoe UI", 1, 21)); // NOI18N
        whoami.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                whoamiAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Auckland_Transport_Logo_optimized.png"))); // NOI18N

        jPanel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel11.setText("Username:");
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        name_placeholder.setText("Name place");
        name_placeholder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        name_placeholder.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                name_placeholderAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                name_placeholderAncestorRemoved(evt);
            }
        });

        jLabel12.setText("Email:");
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        email_placeholder.setText("email place");
        email_placeholder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel13.setText("Account made:");
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        role_placeholder.setText("Member");
        role_placeholder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel14.setText("Role:");
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        acc_made.setText("Acc placeholder");
        acc_made.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        discount_type.setText("Member concessions");
        discount_type.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel16.setText("Member concessions:");
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel3.setText("Your Details");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));

        card_number.setText("Card Number:");
        card_number.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        card_balance.setText("Card Balance:");
        card_balance.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel19.setText("Card Number:");
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel20.setText("Card Balance:");
        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/new-zealand-kiwi-bird-clipart.png"))); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));

        Options.setText("Profile Options");
        Options.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Options.setForeground(new java.awt.Color(51, 102, 255));

        passwordChange.setText("Change Password");
        passwordChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordChangeActionPerformed(evt);
            }
        });

        emailChange.setText("Change email");
        emailChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel14)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(card_balance)
                            .addComponent(role_placeholder)
                            .addComponent(email_placeholder)
                            .addComponent(acc_made)
                            .addComponent(discount_type)
                            .addComponent(name_placeholder)
                            .addComponent(card_number)))
                    .addComponent(jLabel3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(47, 47, 47)))
                .addGap(98, 98, 98)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Options)
                    .addComponent(passwordChange, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailChange, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 418, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Options)
                                .addGap(28, 28, 28)
                                .addComponent(emailChange, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(passwordChange, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(116, 116, 116))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(jLabel20))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(name_placeholder))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(email_placeholder))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(role_placeholder))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(acc_made))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(discount_type))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(card_number)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(card_balance)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addGap(50, 50, 50))))
        );

        user_info_tab.addTab("User Information", jPanel2);

        jLabel9.setText("Booking Type");
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        ferry_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bus", "Train", "Boat" }));
        ferry_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ferry_typeActionPerformed(evt);
            }
        });

        jLabel17.setText("Select date to book for:");
        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel18.setText("Price");
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        fare_price.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fare_price.setText("0");
        fare_price.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fare_priceAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(fare_price);

        fare_booking_info.setColumns(20);
        fare_booking_info.setRows(5);
        fare_booking_info.setText("                                     ==========Waiting for user to make a booking======\n\t\t\t\t(All your previous bookings can be viewed in my bookings tah)");
        fare_booking_info.setCaretColor(new java.awt.Color(51, 102, 255));
        fare_booking_info.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        fare_booking_info.setForeground(new java.awt.Color(0, 51, 204));
        fare_booking_info.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fare_booking_infoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(fare_booking_info);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calendar_8518112.png"))); // NOI18N

        pay_button.setText("Confirm and pay");
        pay_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_buttonActionPerformed(evt);
            }
        });

        jLabel29.setText("Route");
        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        location.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "North", "East", "South", "West" }));
        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });

        aucklandLocations.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select location" }));
        aucklandLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aucklandLocationsActionPerformed(evt);
            }
        });

        jLabel30.setText("Location in auckland");
        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(calender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(153, 153, 153)
                                        .addComponent(jLabel18))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pay_button, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ferry_type, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aucklandLocations, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel9)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(calender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ferry_type, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aucklandLocations, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pay_button, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );

        user_info_tab.addTab("Book a fare", jPanel3);

        booking_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Booking Date", "Departing date", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        booking_table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                booking_tableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(booking_table);

        jLabel23.setText("Controls");
        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 102, 255));

        update_booking.setText("Update");
        update_booking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_bookingActionPerformed(evt);
            }
        });

        delete_table.setText("Delete booking");
        delete_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_tableActionPerformed(evt);
            }
        });

        edit_booking1.setText("View in Detail");
        edit_booking1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_booking1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(update_booking, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_booking1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_table, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(update_booking, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(edit_booking1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete_table, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)))
                .addContainerGap())
        );

        user_info_tab.addTab("My Bookings", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1066, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );

        user_info_tab.addTab("", jPanel1);

        cardNM.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel21.setText("Card Number:");
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel22.setText("Card Balance: ");
        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        card_bal.setText("money");
        card_bal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        generate_card.setText("Click to generate");
        generate_card.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        generate_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_cardActionPerformed(evt);
            }
        });

        no_card_txt.setText("It looks like you cont have a card click button to generate you wont be able to make bookings without one");
        no_card_txt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        no_card_txt.setForeground(new java.awt.Color(255, 0, 51));

        jLabel6.setText("General Information");
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));

        amount_topup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_topupActionPerformed(evt);
            }
        });
        amount_topup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amount_topupKeyTyped(evt);
            }
        });

        topup_button.setText("Confirm and pay");
        topup_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topup_buttonActionPerformed(evt);
            }
        });

        jLabel25.setText("Top up");
        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 102, 255));

        jLabel26.setText("Enter Amount:");
        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(topup_button, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(amount_topup, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(no_card_txt)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cardNM))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(card_bal))
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generate_card, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(no_card_txt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cardNM)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(card_bal))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25))
                    .addComponent(generate_card, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(amount_topup, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topup_button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        user_info_tab.addTab("Card", jPanel4);

        LOGOUT.setText("LOGOUT");
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(user_info_tab)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(whoami, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(whoami, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(jLabel2)
                        .addGap(292, 292, 292))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(user_info_tab, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void whoamiAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_whoamiAncestorAdded
        // TODO add your handling code here:
        User current_user = Session.getCurrentUser();
        whoami.setText("Welcome back " + current_user.getName());
    }//GEN-LAST:event_whoamiAncestorAdded

    // handles the email change button click
    private void emailChangeActionPerformed(java.awt.event.ActionEvent evt) {
        String newEmailStr = JOptionPane.showInputDialog(this, "Enter new email:");
        if (newEmailStr == null || newEmailStr.trim().isEmpty()) {
            return; // User cancelled or entered empty string
        }
        
        // Validate email format
        String emailRegex = "^[A-Za-z0-9+_.-]+@(.+)$";
        if (!newEmailStr.matches(emailRegex)) {
            JOptionPane.showMessageDialog(this, "Invalid email format.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        User current = Session.getCurrentUser();
        if (this.usersDB.updateUserEmail(current.getEmail(), newEmailStr)) {
            JOptionPane.showMessageDialog(this, "Email updated successfully.");
            current.setEmail(newEmailStr); // Update session object
            email_placeholder.setText(newEmailStr); // Update UI
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update email.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // handles the password change button click
    private void passwordChangeActionPerformed(java.awt.event.ActionEvent evt) {
        String newPasswordStr = JOptionPane.showInputDialog(this, "Enter new password:");
        if (newPasswordStr == null || newPasswordStr.trim().isEmpty()) {
            return; // User cancelled or entered empty string
        }
        
        User current = Session.getCurrentUser();
        if (this.usersDB.updateUserPassword(current.getEmail(), newPasswordStr)) {
            JOptionPane.showMessageDialog(this, "Password updated successfully.");
            current.setPassword(newPasswordStr); // Update session object
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update password.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // handles the logout button click
    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
        // logs the user out
        JOptionPane.showMessageDialog(this, "Logging out...");
        this.dispose();
        new LaunchWindow().setVisible(true);
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void LOGOUT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUT1ActionPerformed
        // logs the user out
        this.dispose();
        new LaunchWindow().setVisible(true);
        
    }//GEN-LAST:event_LOGOUT1ActionPerformed

    // handles top up button click
    private void topup_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topup_buttonActionPerformed
        // TODO add your handling code here:

        User current = Session.getCurrentUser();

        if (current == null) {
            JOptionPane.showMessageDialog(this, "Please log in first.");
            return;
        }

        // 2) Parse the amount from your text field
        String text = amount_topup.getText().trim();
        double amt;
        try {
            amt = Double.parseDouble(text);
            if (amt <= 0) throw new NumberFormatException();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid positive number.");
            return;
        }

        // 3) Apply the top-up to the in-memory user
        double newBalance = current.getBalance() + amt;
        if (newBalance > 1000) {
            JOptionPane.showMessageDialog(this, "Max money card can have exceeded topup when you're low!");
            return;
        }
        current.setBalance(newBalance);

        // 4) Persist the new balance to your database
        this.usersDB.updateUserBalance(current.getEmail(), newBalance);
        // 5) Update your UI label/textfield
        card_bal.setText(String.format("%.2f", newBalance));
    }//GEN-LAST:event_topup_buttonActionPerformed

    // validates top up amount input
    private void amount_topupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amount_topupKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_amount_topupKeyTyped

    private void amount_topupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_topupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amount_topupActionPerformed

    // handles generate card button click
    private void generate_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_cardActionPerformed
        // TODO add your handling code here:
        User currentUser = Session.getCurrentUser();
        cardManager cardMgr = new cardManager(new DBManager());
        try {
            String newCard = cardMgr.issueCard(currentUser);
            // inform the user
            JOptionPane.showMessageDialog(
                this,
                "Your new card number is: " + newCard,
                "Card Issued",
                JOptionPane.INFORMATION_MESSAGE
            );

            // update the UI label
            cardNM.setText(currentUser.getCardNumber());
            refreshCardUI();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                this,
                "Failed to issue card:\n" + ex.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
        } catch (Exception ex) {
            Logger.getLogger(UserWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generate_cardActionPerformed

    // handles edit booking button click
    private void edit_booking1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_booking1ActionPerformed
        // TODO add your handling code here:
        int viewRow = booking_table.getSelectedRow();
        if (viewRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a booking to view in detail");
            return;
        }

        User current = Session.getCurrentUser();

        int modelRow = booking_table.convertRowIndexToModel(viewRow);

        try {
            List<Booking> bookingInfo = this.bookingsDB.getBookingsForUser(current.getEmail());
            ReciptPanel recipt = new ReciptPanel();
            recipt.setVisible(true);
            recipt.displayBooking(bookingInfo.get(modelRow));

        } catch (SQLException ex) {
            Logger.getLogger(UserWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_edit_booking1ActionPerformed

    // handles delete booking button click
    private void delete_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_tableActionPerformed
        // TODO add your handling code here:
        int viewRow = booking_table.getSelectedRow();
        if (viewRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a booking first ");
            return;
        }
        int modelRow = booking_table.convertRowIndexToModel(viewRow);

        User user = Session.getCurrentUser();
        try {
            List<Booking> bookingData = this.bookingsDB.getBookingsForUser(user.getEmail());
            Booking userID = bookingData.get(modelRow);
            int choice = JOptionPane.showConfirmDialog(this,
                "Please confirm the deleton of: " + userID.getBookingId() + "?",
                "",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            if (choice != JOptionPane.YES_OPTION) {
                return;
            }

            boolean ok = this.bookingsDB.deleteBooking(userID.getBookingId());

            if (ok) {
                updateTable();
                JOptionPane.showMessageDialog(rootPane, "Deleted");
            } else {
                JOptionPane.showMessageDialog(this, "Problem deleting your booking try again in a sort time");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserWindow.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Database error could not delete databse");

        }
    }//GEN-LAST:event_delete_tableActionPerformed

    private void update_bookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_bookingActionPerformed
        // TODO add your handling code here:
        updateTable();
    }//GEN-LAST:event_update_bookingActionPerformed

    private void booking_tableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_booking_tableAncestorAdded
        // TODO add your handling code here:
        booking_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }//GEN-LAST:event_booking_tableAncestorAdded

    // handles location dropdown selection
    private void aucklandLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aucklandLocationsActionPerformed
        String suburb = (String) aucklandLocations.getSelectedItem();
        if (suburb != null) {
            Integer dist = Location.DISTANCE_KM.get(suburb);
            if (dist != null) {
                double fare = Location.BASE_FARE + Location.RATE_PER_KM * dist;
                fare = Math.min(fare, Location.MAX_FARE);
                fare_price.setText(String.format("$%.2f", fare));
            } else {
                fare_price.setText("$0.00");
            }
        }
    }//GEN-LAST:event_aucklandLocationsActionPerformed

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_locationActionPerformed

    // handles pay button click
    private void pay_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pay_buttonActionPerformed
        // TODO add your handling code here:
        User current = Session.getCurrentUser();
        if (current == null) {
            JOptionPane.showMessageDialog(this, "User session not found.");
            return;
        }

        if (current.getCardNumber() == null) {
            JOptionPane.showMessageDialog(this, "Please get a card first from the settings tab");
            return;
        }
        
        String serviceType = (String) ferry_type.getSelectedItem();
        String destination = (String) aucklandLocations.getSelectedItem();

        if (serviceType == null || destination == null) {
            JOptionPane.showMessageDialog(this, "Please select a service type and destination.");
            return;
        }

        LocalDate departureDate = calender.getSelectedDate();
        if (departureDate == null) {
            JOptionPane.showMessageDialog(this, "Please select a departure date.");
            return;
        }

        Integer dist = Location.DISTANCE_KM.get(destination);
        if (dist == null) {
            JOptionPane.showMessageDialog(this, "Invalid destination selected.");
            return;
        }
        double price = Location.BASE_FARE + Location.RATE_PER_KM * dist;
        double finalPrice = Math.min(price, Location.MAX_FARE);

        if (current.getBalance() < finalPrice) {
            JOptionPane.showMessageDialog(this, "You have insufficient funds for this booking.");
            return;
        }

        try {
            int bookingId = this.bookingsDB.addBooking(
                current.getName(),
                current.getEmail(),
                LocalDate.now(),
                departureDate,
                destination,
                finalPrice,
                serviceType
            );

            if (bookingId > 0) {
                double newBalance = current.getBalance() - finalPrice;
                this.usersDB.updateUserBalance(current.getEmail(), newBalance);
                current.setBalance(newBalance);
                Session.setCurrentUser(current);
                card_bal.setText(String.format("%.2f", newBalance));

                showBookingConfirmation(current, LocalDate.now(), departureDate, destination, serviceType, finalPrice);
                updateTable();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to create booking.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserWindow.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "A database error occurred while creating your booking.");
        }
    }//GEN-LAST:event_pay_buttonActionPerformed

    private void fare_booking_infoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fare_booking_infoAncestorAdded
        // TODO add your handling code here:
        fare_booking_info.setEditable(false);
    }//GEN-LAST:event_fare_booking_infoAncestorAdded

    private void fare_priceAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fare_priceAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_fare_priceAncestorAdded

    private void ferry_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ferry_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ferry_typeActionPerformed

    private void name_placeholderAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_name_placeholderAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_name_placeholderAncestorRemoved

    // sets user info on the ui
    private void name_placeholderAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_name_placeholderAncestorAdded

        User current = Session.getCurrentUser();

        // TODO add your handling code here:
        name_placeholder.setText(current.getName());
        email_placeholder.setText(current.getEmail());

        Date legacyDate = Date.valueOf(current.getMemberSince());

        SimpleDateFormat formatted_date = new SimpleDateFormat("yyyy-MM-dd");
        String s = formatted_date.format(legacyDate);
        acc_made.setText(s);
        discount_type.setText(current.getDiscountType());

        if (current.getCardNumber() == null) {
            card_number.setText("No card registered yet");
        } else {
            card_number.setText(current.getCardNumber());
        }

        card_balance.setText(Double.toString(current.getBalance()));

        repaint();
        revalidate();
    }//GEN-LAST:event_name_placeholderAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatDarkLaf());
            System.out.println("L&F on startup: " + UIManager.getLookAndFeel());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LOGOUT;
    private javax.swing.JButton LOGOUT1;
    private javax.swing.JLabel Options;
    private javax.swing.JLabel acc_made;
    private javax.swing.JTextField amount_topup;
    private javax.swing.JComboBox<String> aucklandLocations;
    private javax.swing.JTable booking_table;
    private com.github.lgooddatepicker.components.CalendarPanel calender;
    private javax.swing.JLabel cardNM;
    private javax.swing.JLabel card_bal;
    private javax.swing.JLabel card_balance;
    private javax.swing.JLabel card_number;
    private javax.swing.JButton delete_table;
    private javax.swing.JLabel discount_type;
    private javax.swing.JToggleButton edit_booking1;
    private javax.swing.JButton emailChange;
    private javax.swing.JLabel email_placeholder;
    private javax.swing.JTextArea fare_booking_info;
    private javax.swing.JTextPane fare_price;
    private javax.swing.JComboBox<String> ferry_type;
    private javax.swing.JToggleButton generate_card;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox<String> location;
    private javax.swing.JLabel name_placeholder;
    private javax.swing.JLabel no_card_txt;
    private javax.swing.JButton passwordChange;
    private javax.swing.JButton pay_button;
    private javax.swing.JLabel role_placeholder;
    private javax.swing.JButton topup_button;
    private javax.swing.JToggleButton update_booking;
    private javax.swing.JTabbedPane user_info_tab;
    private javax.swing.JLabel username_label2;
    private javax.swing.JLabel whoami;
    // End of variables declaration//GEN-END:variables
}
